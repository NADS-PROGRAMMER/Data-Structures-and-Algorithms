import java.util.*;

public class Week4CaseStudy {
    
    static Scanner console = new Scanner(System.in);
    static DisjointSet set = new DisjointSet();
    public static void main(String[] args) {

        int firstNum, secondNum;

        System.out.print("Enter 10 numbers to form a set:\n");
        for (int i = 0; i < 10; i++) {

            System.out.print("Enter a number: ");
            set.makeSet(new Node(console.nextInt()));
        }

        menu(); // Display the choices in the console.

        System.out.print("\nSelect an operation: ");
        int choice = console.nextInt();

        while (choice != 3) {

            switch (choice) {

                case 1: // Union Operation

                    firstNum = isExisting("first", "Union"); // for first number
                    secondNum = isExisting("second", "Union"); // for second number

                    // Check if both value are not yet connected
                    if (set.find(firstNum) != set.find(secondNum)) {
                        set.union(firstNum, secondNum);
                        System.out.println("Operation Successful!\n");
                    }
                    else
                        System.out.println("They are already connected!");

                    break;
                case 2: // Find Operation

                    firstNum = isExisting("first", "Find"); // for first number
                    secondNum = isExisting("second", "Find"); // for second number

                    if (set.find(firstNum) == set.find(secondNum))
                        System.out.println("The two numbers are connected!");
                    else
                        System.out.println("The two numbers are not connected!");

                    break;
                default: 
                    System.out.println("End of program."); 
            }

            menu(); // Display the choices.
            System.out.print("\nSelect an operation: ");
            choice = console.nextInt();
        }
        System.out.println("End of program.");
        console.close();
    }

    /** Method for displaying the choices. */
    static void menu() {

        System.out.println("\n[1] Union");
        System.out.println("[2] Find");
        System.out.println("[3] Exit");
    }

    /**
     * A method for checking if the number is existing on the set
     * before doing union or find operation. 
     * @param text
     * - A text to display to console if it is first or second number.
     * Example is if the value of text is equal to "first"
     * then the output is Enter first number: 
     * @return 
     * - returns the number that the user want to include on union or find operation. */
    static int isExisting(String text, String operation) {

        int number = 0;

        while (true) {

            System.out.printf("Enter %s number for %s operation: ", text, operation);
            number = console.nextInt();

            // Check if the number is existing.
            if (!set.contains(number)) 

                System.out.printf("%d does not exist in set. Please enter the existing number.%n", number);
            else
                break; // if it does exist.
        }
        return number;
    }
}
